/* eslint-disable @next/next/no-img-element */
import Head from "next/head";
import Link from "next/link";
import { sanityClient, urlFor } from "../client";
import styled from "styled-components";
import { motion } from "framer-motion";
import Intro from "../components/Intro";
import ContactForm from "../components/ContactForm";
import AboutSection from "../components/AboutSection";

const PortfolioTitle = styled.h2`
  // background: green;
  grid-area: t;
  display: flex;
  align-items: flex-end;
  padding-left: 10px;
  font-size: 30px;
  text-decoration: underline;
`;

const Grid = styled.div`
  opacity: 0.9;
  padding: 70px 40px;
  // background: pink;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-areas:
    "t t"
    "a b"
    "c d";
  grid-gap: 1em;

  @media only screen and (max-width: 1024px) {
    padding: 30px 10px;
    grid-template-columns: 1fr;
  }
  @media only screen and (max-width: 834px) {
    padding: 30px 30px;
  }
`;

const Sq = styled.div`
  background: teal;
  padding: 20px;
  border: solid 2px black;
  font-size: 18px;
`;

const WebsiteTitle = styled.h2`
  display: flex;
  font-size: 25px;
`;

const TitleIconWrapper = styled.div`
  display: flex;
`;

const WebsiteDescription = styled.p``;
const WebsiteTags = styled.span``;

const Icon = styled.div`
  font-size: 30px;
  padding-left: 20px;
`;

export const ButtonsWrapper = styled.div``;

export const Button = styled.button`
  background: aquamarine;
  border: 1px solid teal;
  padding: 3px 8px;
`;

//*CONTACT

export const ContactWrapper = styled.div`
  display: flex;
  // justify-content: center;
`;

export const ContactGrid = styled.div`
  // border: solid 2px #000;
  margin: 65px;
  // background: teal;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-areas: "left right";
`;
export const LeftSide = styled.div`
  grid-area: left;
  border-right: solid 1px #000;
`;
export const RightSide = styled.div`
  grid-area: right;
  border-left: solid 1px #000;
  background: coral;
`;

const Home = ({ websites }) => {
  return (
    <>
      <Head>
        <title>Elsa Hovey | Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.3, duration: 0.5 }}
      >
        <Intro />
        <Grid>
          <PortfolioTitle id="portfolio">Portfolio</PortfolioTitle>
          {websites &&
            websites.map((website, index) => (
              <span key={index}>
                <Sq>
                  <TitleIconWrapper>
                    <WebsiteTitle>{website.websiteTitle}</WebsiteTitle>
                    <Icon>(i)</Icon>
                  </TitleIconWrapper>
                  <WebsiteDescription>{website.description}</WebsiteDescription>
                  <WebsiteTags>{website.tags}</WebsiteTags>
                  <ButtonsWrapper>
                    <Button>
                      <Link href="/">visit site</Link>
                    </Button>
                    <Button>
                      <Link href="/">view code</Link>
                    </Button>
                  </ButtonsWrapper>
                </Sq>
              </span>
            ))}
        </Grid>
        <ContactWrapper id="contact">
          <ContactGrid>
            <LeftSide>
              <AboutSection />
            </LeftSide>
            <RightSide>
              <ContactForm />
            </RightSide>
          </ContactGrid>
        </ContactWrapper>

        {/* ADD CONTACT, ABOUT TO INDEX */}
      </motion.div>
    </>
  );
};

export default Home;

export const getServerSideProps = async () => {
  const query = '*[_type == "websites"] | order(_createdAt asc)';
  const websites = await sanityClient.fetch(query);
  if (!websites.length) {
    return {
      props: {
        websites: [],
      },
    };
  } else {
    return {
      props: {
        websites,
      },
    };
  }
};
